<mxfile host="app.diagrams.net" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/134.0.0.0 Safari/537.36" version="26.1.2">
  <diagram name="Página-1" id="tY_578vqZiOzTQhLFPis">
    <mxGraphModel dx="2647" dy="1587" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-22" value="MODEL" style="swimlane;labelBackgroundColor=default;" parent="1" vertex="1">
          <mxGeometry x="350" y="30" width="436" height="300" as="geometry" />
        </mxCell>
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-8" value="&lt;b&gt;ACCOUNT&lt;/b&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;@Id&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;@GeneratedValue&lt;/b&gt;&lt;/div&gt;&lt;div&gt;id&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;@AccountType&lt;/b&gt;&lt;/div&gt;&lt;div&gt;type&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;balance&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;owner_id&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;@Transient&lt;/b&gt;&lt;/div&gt;&lt;div&gt;owner&lt;/div&gt;" style="whiteSpace=wrap;html=1;aspect=fixed;verticalAlign=top;" parent="3umB6E8wOPS6ejXKB-Yw-22" vertex="1">
          <mxGeometry x="16" y="40" width="230" height="230" as="geometry" />
        </mxCell>
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-9" value="&lt;b&gt;CUSTOMER&lt;/b&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;b&gt;@Id&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;@GeneratedValue&lt;/b&gt;&lt;/div&gt;&lt;div&gt;id&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;name&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;email&lt;/div&gt;" style="whiteSpace=wrap;html=1;aspect=fixed;verticalAlign=top;" parent="3umB6E8wOPS6ejXKB-Yw-22" vertex="1">
          <mxGeometry x="250" y="40" width="187" height="187" as="geometry" />
        </mxCell>
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-23" value="Controllers" style="swimlane;" parent="1" vertex="1">
          <mxGeometry x="800" y="30" width="570" height="1570" as="geometry" />
        </mxCell>
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-10" value="&lt;b&gt;AccountServiceController&lt;/b&gt;&lt;div&gt;&lt;b&gt;implements&amp;nbsp;&lt;/b&gt;&lt;span style=&quot;font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; background-color: rgb(30, 31, 34); color: rgb(188, 190, 196);&quot;&gt;IAccountServiceController&lt;/span&gt;&lt;div&gt;&lt;div style=&quot;background-color: rgb(30, 31, 34); color: rgb(188, 190, 196);&quot;&gt;&lt;pre style=&quot;font-family:&#39;JetBrains Mono&#39;,monospace;font-size:9,0pt;&quot;&gt;&lt;span style=&quot;color: rgb(179, 174, 96);&quot;&gt;@RestController&lt;br&gt;&lt;/span&gt;&lt;span style=&quot;color: rgb(179, 174, 96);&quot;&gt;@RequestMapping&lt;/span&gt;(&lt;span style=&quot;color: rgb(106, 171, 115);&quot;&gt;&quot;/account&quot;&lt;/span&gt;)&lt;/pre&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;verticalAlign=top;align=left;" parent="3umB6E8wOPS6ejXKB-Yw-23" vertex="1">
          <mxGeometry x="115" y="30" width="270" height="95" as="geometry" />
        </mxCell>
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-13" value="&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;b&gt;IAccountServiceController&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;u&gt;&lt;b style=&quot;line-height: 140%;&quot;&gt;PUT&lt;/b&gt;&lt;/u&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;/account/customer/{oid}/update&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Actualizar Cuenta de un Cliente&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Accept= JSON, XML&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;200 /content-type:JSON&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;400 &lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;color: rgb(106, 171, 115); font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; background-color: rgb(30, 31, 34);&quot;&gt;&quot;No existe la cuenta a actualizar para este usuario&quot;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;/account/{aid}/customer/{oid}/takeBalance&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;Retirar Dinero de una Cuenta&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Accept= JSON, XML&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;200 /content-type:JSON&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;/account/{aid}/customer/{oid}/takeBalanceAllAccounts&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Retirar Dinero de una Cuenta y si no hay saldo se resta de las&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;demás cuentas si es posible.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Accept= JSON, XML&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;200 /content-type:JSON&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;/account/{aid}/customer/{oid}/addBalance&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Ingresar dinero en una cuenta&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Accept= JSON, XML&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;200 /content-type:JSON&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;b&gt;&lt;u style=&quot;line-height: 140%;&quot;&gt;POST&lt;/u&gt;&lt;/b&gt;&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;/account/customer/{oid}/create&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;Crear una cuenta para un usuario validando&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;el tipo (personal o company)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Accept= JSON, XML&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;200 /content-type:JSON&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;b&gt;&lt;u style=&quot;line-height: 140%;&quot;&gt;GET&lt;/u&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;/account/customer/{oid}/create&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;Solicitar si es posible hacer un préstamo sin superar el 80% del&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;capital disponible en las cuentas del cliente&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Accept= JSON, XML&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;200 /content-type:JSON&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;/account/{id}/customer/{oid}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;Obtener cuenta de un cliente&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Accept= JSON, XML&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;200 /content-type:JSON&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;400 &lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;color: rgb(106, 171, 115); font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; background-color: rgb(30, 31, 34);&quot;&gt;&quot;Error al obtener la cuenta&quot;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;/account/customer/{id}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;obtener todas las cuentas de un cliente&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Accept= JSON, XML&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;200 /content-type:JSON&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;b&gt;&lt;u style=&quot;line-height: 140%;&quot;&gt;DELETE&lt;/u&gt;&lt;/b&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;/account/{aid}/customer/{oid}&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;Borrar cuenta de un cliente&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Accept= JSON, XML&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;200 /content-type:JSON&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;400 &lt;/span&gt;&lt;/font&gt;&lt;span style=&quot;color: rgb(106, 171, 115); font-family: &amp;quot;JetBrains Mono&amp;quot;, monospace; background-color: rgb(30, 31, 34);&quot;&gt;&quot;No se ha podido realizar la acción de borrado&quot;&lt;/span&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;br&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;/account/customer/{oid}/deleteAllAccounts&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;Borrar todas las cuentas de un cliente&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;span style=&quot;background-color: rgb(250, 250, 250); font-family: &amp;quot;Times New Roman&amp;quot;; font-size: medium; white-space: pre; color: light-dark(rgb(0, 0, 0), rgb(255, 255, 255));&quot;&gt;Accept= JSON, XML&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;font-family: Helvetica; font-size: 12px; white-space: normal; background-color: rgb(251, 251, 251);&quot;&gt;&lt;font size=&quot;3&quot; face=&quot;Times New Roman&quot;&gt;&lt;span style=&quot;white-space: pre; background-color: rgb(250, 250, 250);&quot;&gt;200 /content-type:JSON&lt;/span&gt;&lt;/font&gt;&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;" style="shape=note;whiteSpace=wrap;html=1;backgroundOutline=1;darkOpacity=0.05;verticalAlign=top;align=left;" parent="3umB6E8wOPS6ejXKB-Yw-23" vertex="1">
          <mxGeometry x="70" y="154" width="430" height="1366" as="geometry" />
        </mxCell>
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-25" value="Application.yml" style="swimlane;" parent="1" vertex="1">
          <mxGeometry x="10" y="30" width="330" height="310" as="geometry" />
        </mxCell>
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-2" value="h2" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;" parent="3umB6E8wOPS6ejXKB-Yw-25" vertex="1">
          <mxGeometry x="215" y="40" width="60" height="80" as="geometry" />
        </mxCell>
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-3" value="futura BD MySQL" style="shape=cylinder3;whiteSpace=wrap;html=1;boundedLbl=1;backgroundOutline=1;size=15;" parent="3umB6E8wOPS6ejXKB-Yw-25" vertex="1">
          <mxGeometry x="215" y="145" width="60" height="80" as="geometry" />
        </mxCell>
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-5" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;exitX=0.875;exitY=0.5;exitDx=0;exitDy=0;exitPerimeter=0;" parent="3umB6E8wOPS6ejXKB-Yw-25" source="3umB6E8wOPS6ejXKB-Yw-4" target="3umB6E8wOPS6ejXKB-Yw-3" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="135" y="190" as="sourcePoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-28" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0.25;entryDx=0;entryDy=0;" parent="3umB6E8wOPS6ejXKB-Yw-25" source="3umB6E8wOPS6ejXKB-Yw-4" target="3umB6E8wOPS6ejXKB-Yw-27" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-4" value="prod" style="ellipse;shape=cloud;whiteSpace=wrap;html=1;" parent="3umB6E8wOPS6ejXKB-Yw-25" vertex="1">
          <mxGeometry x="55" y="150" width="90" height="70" as="geometry" />
        </mxCell>
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-6" value="dev" style="ellipse;shape=cloud;whiteSpace=wrap;html=1;" parent="3umB6E8wOPS6ejXKB-Yw-25" vertex="1">
          <mxGeometry x="55" y="60" width="90" height="70" as="geometry" />
        </mxCell>
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-7" style="edgeStyle=orthogonalEdgeStyle;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;entryX=0;entryY=0;entryDx=0;entryDy=52.5;entryPerimeter=0;exitX=0.875;exitY=0.5;exitDx=0;exitDy=0;exitPerimeter=0;" parent="3umB6E8wOPS6ejXKB-Yw-25" source="3umB6E8wOPS6ejXKB-Yw-6" target="3umB6E8wOPS6ejXKB-Yw-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="3umB6E8wOPS6ejXKB-Yw-27" value="HTTPS&lt;div&gt;keystore.p12&lt;/div&gt;" style="shape=hexagon;perimeter=hexagonPerimeter2;whiteSpace=wrap;html=1;fixedSize=1;" parent="3umB6E8wOPS6ejXKB-Yw-25" vertex="1">
          <mxGeometry x="125" y="220" width="90" height="60" as="geometry" />
        </mxCell>
        <mxCell id="_1vD3CCfBnafuuntgOwN-1" value="AccountServiceControlerTest{&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp;@Autowired&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; private AccountServiceController controller;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Test&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; void givenIdCustomerGettAllAccountsThenOK() {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ResponseEntity&amp;lt;List&amp;lt;Account&amp;gt;&amp;gt; response = controller.getAllAccountsByCustomer(1L);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; assertThat(response.getStatusCode().value()).isEqualTo(HttpStatus.OK.value());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; assertThat(response.getBody()).isNotNull();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;@Test&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; void givenAccountIdOwnerIdNoExistThenBadRequest(){&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ResponseEntity response = controller.getAccountByCustomer(1L,100L);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; assertThat(response.getStatusCode().value()).isEqualTo(HttpStatus.BAD_REQUEST.value());&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Test&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; void givenAccountIdAndAccountUpdateThenBadRequest(){&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Account newAcount = new Account();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setId(5L);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setType(&quot;Personal&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setOpeningDate(null);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setBalance(9999);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setOwnerId(1L);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ResponseEntity response = controller.updateAccount(newAcount, 99L);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; assertThat(response.getStatusCode().value()).isEqualTo(HttpStatus.BAD_REQUEST.value());&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Test&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; void givenAccountIdOwnerIdThenOK(){&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ResponseEntity response = controller.getAccountByCustomerDTO(1L, 1L);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; assertThat(response.getStatusCode().value()).isEqualTo(HttpStatus.OK.value());&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; assertThat(response.getBody()).isNotNull();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;fillColor=#d5e8d4;strokeColor=#82b366;" vertex="1" parent="1">
          <mxGeometry x="240" y="350" width="570" height="750" as="geometry" />
        </mxCell>
        <mxCell id="_1vD3CCfBnafuuntgOwN-2" value="" style="shape=flexArrow;endArrow=classic;html=1;rounded=0;entryX=0.006;entryY=0.246;entryDx=0;entryDy=0;entryPerimeter=0;exitX=1;exitY=0.5;exitDx=0;exitDy=0;" edge="1" parent="1" source="_1vD3CCfBnafuuntgOwN-1" target="3umB6E8wOPS6ejXKB-Yw-13">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="540" y="560" as="sourcePoint" />
            <mxPoint x="590" y="510" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="_1vD3CCfBnafuuntgOwN-8" value="Service" style="swimlane;labelBackgroundColor=default;" vertex="1" parent="1">
          <mxGeometry x="1400" y="35" width="270" height="300" as="geometry" />
        </mxCell>
        <mxCell id="_1vD3CCfBnafuuntgOwN-9" value="&lt;b&gt;AccountService&lt;/b&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&amp;nbsp;Account create(Account account)&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Account getAccount(Long id)&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;Account updateAccount(Long id, Account account)&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;void deleteAccountsUsingOwnerId(Long ownerId)&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;aspect=fixed;verticalAlign=top;" vertex="1" parent="_1vD3CCfBnafuuntgOwN-8">
          <mxGeometry x="16" y="40" width="230" height="230" as="geometry" />
        </mxCell>
        <mxCell id="_1vD3CCfBnafuuntgOwN-12" value="&lt;div&gt;AccountServiceTest{&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp;@Autowired&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; AccountService accountService;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Test&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; void givenDataCreateAccount(){&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Account newAcount = new Account();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setType(&quot;Personal&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setOpeningDate(null);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setBalance(9999);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setOwnerId(1L);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Account accountCreated = accountService.create(newAcount);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; assertThat(accountCreated).isNotNull();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Test&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; void givenAccountIdNoExistThenException(){&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; assertThatExceptionOfType(AccountNotfoundException.class).isThrownBy(() -&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Account account = accountService.getAccount(99L);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Test&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; void givenAccountIdAndAccountUpdateThenException(){&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Account newAcount = new Account();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setType(&quot;Personal&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setOpeningDate(null);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setBalance(9999);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setOwnerId(1L);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Account accountCreated = accountService.create(newAcount);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; assertThatExceptionOfType(AccountNotfoundException.class).isThrownBy(() -&amp;gt; {&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Account accountUpdate = accountService.updateAccount(100L, accountCreated);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; });&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Test&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; void givenOwnerIdDeleteAllAccounts(){&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; accountService.deleteAccountsUsingOwnerId(3L);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; List&amp;lt;Account&amp;gt; accountList = accountService.getAccountByOwnerId(3L);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; assertThat(accountList.isEmpty());&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;fillColor=#e1d5e7;strokeColor=#9673a6;" vertex="1" parent="1">
          <mxGeometry x="1432" y="425" width="498" height="855" as="geometry" />
        </mxCell>
        <mxCell id="_1vD3CCfBnafuuntgOwN-13" value="" style="shape=flexArrow;endArrow=classic;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" edge="1" parent="1" source="_1vD3CCfBnafuuntgOwN-12" target="_1vD3CCfBnafuuntgOwN-9">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1580" y="480" as="sourcePoint" />
            <mxPoint x="1630" y="430" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="_1vD3CCfBnafuuntgOwN-14" value="Persistence" style="swimlane;labelBackgroundColor=default;" vertex="1" parent="1">
          <mxGeometry x="2100" y="30" width="270" height="300" as="geometry" />
        </mxCell>
        <mxCell id="_1vD3CCfBnafuuntgOwN-15" value="&lt;b&gt;AccountRepository&lt;/b&gt;&lt;div&gt;&lt;b&gt;&lt;br&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;findByOwnerId(Long OwnerId)&lt;/b&gt;&lt;/div&gt;" style="whiteSpace=wrap;html=1;aspect=fixed;verticalAlign=top;" vertex="1" parent="_1vD3CCfBnafuuntgOwN-14">
          <mxGeometry x="16" y="40" width="230" height="230" as="geometry" />
        </mxCell>
        <mxCell id="_1vD3CCfBnafuuntgOwN-16" value="&lt;div&gt;AccountRepostioryTest{&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&amp;nbsp;private static final Logger logger = LoggerFactory.getLogger(AccountRepositoryTest.class);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Autowired&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; private TestEntityManager entityManager;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Autowired&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; private AccountRepository accountRepository;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; @Test&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; void findByOwnerId(){&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // given&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Account newAcount = new Account();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Date current_Date = new Date();&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setType(&quot;Personal&quot;);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setOpeningDate(current_Date);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setBalance(9999);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; newAcount.setOwnerId(1L);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; entityManager.persist(newAcount);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; entityManager.flush();&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // when&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; List&amp;lt;Account&amp;gt; accountList = accountRepository.findByOwnerId(1L);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; logger.info(&quot;Accounts:&quot; + accountList);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; // then&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; assertNotNull(accountList);&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; assertThat(accountList.size())&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; .isGreaterThan(0);&lt;/div&gt;&lt;div&gt;&amp;nbsp; &amp;nbsp; }&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;div&gt;}&lt;/div&gt;&lt;/div&gt;" style="rounded=0;whiteSpace=wrap;html=1;align=left;fillColor=#f8cecc;strokeColor=#b85450;" vertex="1" parent="1">
          <mxGeometry x="2016.5" y="410" width="429" height="535" as="geometry" />
        </mxCell>
        <mxCell id="_1vD3CCfBnafuuntgOwN-17" value="" style="shape=flexArrow;endArrow=classic;html=1;rounded=0;entryX=0.5;entryY=1;entryDx=0;entryDy=0;exitX=0.5;exitY=0;exitDx=0;exitDy=0;" edge="1" parent="1" source="_1vD3CCfBnafuuntgOwN-16" target="_1vD3CCfBnafuuntgOwN-15">
          <mxGeometry width="50" height="50" relative="1" as="geometry">
            <mxPoint x="1900" y="480" as="sourcePoint" />
            <mxPoint x="1950" y="430" as="targetPoint" />
          </mxGeometry>
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
